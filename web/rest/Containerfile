FROM mcr.microsoft.com/playwright/java:v1.48.0 as playwright

USER root

ENV JAVA_VERSION jdk-22.0.2+9_openj9-0.46.1
ENV DEBIAN_FRONTEND noninteractive

ARG LIBERTY_VERSION=24.0.0.9
ARG LIBERTY_SHA=416a2f8dd37d676b9e60c37463f536974a31d2ef
ARG LIBERTY_DOWNLOAD_URL=https://repo1.maven.org/maven2/io/openliberty/openliberty-kernel/$LIBERTY_VERSION/openliberty-kernel-$LIBERTY_VERSION.zip
ARG LIBERTY_BUILD_LABEL=cl241020240827-1743

ARG OPENJ9_SCC=true
ARG VERBOSE=false

# Install dumb-init
RUN apt-get update \
    && apt-get install -y --no-install-recommends unzip openssl wget curl \
    && ARCH="$(dpkg --print-architecture)" \
    && case "${ARCH}" in \
       aarch64|arm64) \
         ESUM='b4da4670045724892e379701e1ec1f4b93800cc8560258685c826579ffb101bf'; \
         BINARY_URL='https://github.com/ibmruntimes/semeru22-binaries/releases/download/jdk-22.0.2%2B9_openj9-0.46.1/ibm-semeru-open-jdk_aarch64_linux_22.0.2_9_openj9-0.46.1.tar.gz'; \
         ;; \
       amd64|x86_64) \
         ESUM='7fa2780c81063aa2756c4d49940a368b7d2d41d0538809b6512e762a554052ac'; \
         BINARY_URL='https://github.com/ibmruntimes/semeru22-binaries/releases/download/jdk-22.0.2%2B9_openj9-0.46.1/ibm-semeru-open-jdk_x64_linux_22.0.2_9_openj9-0.46.1.tar.gz'; \
         ;; \
       ppc64el|ppc64le) \
         ESUM='0212b31251e35f18d2d973f028e27c26e2c57888e3f2df56a1c851a5bc54aedf'; \
         BINARY_URL='https://github.com/ibmruntimes/semeru22-binaries/releases/download/jdk-22.0.2%2B9_openj9-0.46.1/ibm-semeru-open-jdk_ppc64le_linux_22.0.2_9_openj9-0.46.1.tar.gz'; \
         ;; \
       s390x) \
         ESUM='e2fb0640f828d76820c8b36821abfe9235bdae3efedb3a9ec98021b8dcefce60'; \
         BINARY_URL='https://github.com/ibmruntimes/semeru22-binaries/releases/download/jdk-22.0.2%2B9_openj9-0.46.1/ibm-semeru-open-jdk_s390x_linux_22.0.2_9_openj9-0.46.1.tar.gz'; \
         ;;\
       *) \
         echo "Unsupported arch: ${ARCH}"; \
         exit 1; \
         ;; \
    esac \
    && curl -LfsSo /tmp/openjdk.tar.gz ${BINARY_URL} \
    && echo "${ESUM} */tmp/openjdk.tar.gz" | sha256sum -c - \
    && mkdir -p /opt/java/openjdk \
    && cd /opt/java/openjdk \
    && tar -xf /tmp/openjdk.tar.gz --strip-components=1 \
    && rm -rf /tmp/openjdk.tar.gz \
    && case "${ARCH}" in \
       aarch64|arm64) \
         DUMB_INIT_URL='https://github.com/Yelp/dumb-init/releases/download/v1.2.5/dumb-init_1.2.5_aarch64'; \
         DUMB_INIT_SHA256=b7d648f97154a99c539b63c55979cd29f005f88430fb383007fe3458340b795e; \
         ;; \
       amd64|x86_64) \
         DUMB_INIT_URL='https://github.com/Yelp/dumb-init/releases/download/v1.2.5/dumb-init_1.2.5_x86_64'; \
         DUMB_INIT_SHA256=e874b55f3279ca41415d290c512a7ba9d08f98041b28ae7c2acb19a545f1c4df; \
         ;; \
       ppc64el|ppc64le) \
         DUMB_INIT_URL='https://github.com/Yelp/dumb-init/releases/download/v1.2.5/dumb-init_1.2.5_ppc64le'; \
         DUMB_INIT_SHA256=3d15e80e29f0f4fa1fc686b00613a2220bc37e83a35283d4b4cca1fbd0a5609f; \
         ;; \
       s390x) \
         DUMB_INIT_URL='https://github.com/Yelp/dumb-init/releases/download/v1.2.5/dumb-init_1.2.5_s390x'; \
         DUMB_INIT_SHA256=47e4601b152fc6dcb1891e66c30ecc62a2939fd7ffd1515a7c30f281cfec53b7; \
         ;;\
       *) \
         echo "Unsupported arch: ${ARCH}"; \
         exit 1; \
         ;; \
    esac \
    && curl -LfsSo /usr/bin/dumb-init ${DUMB_INIT_URL} \
    && echo "${DUMB_INIT_SHA256} */usr/bin/dumb-init" | sha256sum -c - \
    && chmod +x /usr/bin/dumb-init;

ENV JAVA_HOME=/opt/java/openjdk \
    PATH="/opt/java/openjdk/bin:$PATH"
ENV JAVA_TOOL_OPTIONS="-XX:+IgnoreUnrecognizedVMOptions -XX:+PortableSharedCache -XX:+IdleTuningGcOnIdle -Xshareclasses:name=openj9_system_scc,cacheDir=/opt/java/.scc,readonly,nonFatal"

COPY target/openliberty.ci.docker/releases/${LIBERTY_VERSION}/kernel-slim/NOTICES /opt/ol/NOTICES
COPY target/openliberty.ci.docker/releases/${LIBERTY_VERSION}/kernel-slim/helpers /opt/ol/helpers
COPY target/openliberty.ci.docker/releases/${LIBERTY_VERSION}/kernel-slim/fixes /opt/ol/fixes

# Install Open Liberty
RUN \
    wget -q $LIBERTY_DOWNLOAD_URL -U UA-Open-Liberty-Docker -O /tmp/wlp.zip \
    && echo "$LIBERTY_SHA  /tmp/wlp.zip" > /tmp/wlp.zip.sha1 \
    && sha1sum -c /tmp/wlp.zip.sha1 \
    && unzip -q /tmp/wlp.zip -d /opt/ol \
    && rm /tmp/wlp.zip \
    && rm /tmp/wlp.zip.sha1 \
    && mkdir -p /licenses \
    && cp /opt/ol/wlp/LICENSE /licenses/ \
    && apt-get remove -y unzip \
    && apt-get remove -y wget \
    && apt-get remove -y curl \
    && rm -rf /var/lib/apt/lists/* \
    && usermod -a -G root pwuser \
    && chown -R 1001:0 /opt/ol/wlp \
    && chmod -R g+rw /opt/ol/wlp

# Set Path Shortcuts
ENV PATH=$PATH:/opt/ol/wlp/bin:/opt/ol/helpers/build \
    LOG_DIR=/logs \
    WLP_OUTPUT_DIR=/opt/ol/wlp/output \
    WLP_SKIP_MAXPERMSIZE=true \
    OPENJ9_SCC=$OPENJ9_SCC

# Configure Open Liberty
RUN /opt/ol/wlp/bin/server create \
    && rm -rf $WLP_OUTPUT_DIR/.classCache /output/workarea \
    && rm -rf /opt/ol/wlp/usr/servers/defaultServer/server.env

# Create symlinks && set permissions for non-root user
RUN mkdir /logs \
    && mkdir -p /opt/ol/wlp/usr/shared/resources/lib.index.cache \
    && ln -s /opt/ol/wlp/usr/shared/resources/lib.index.cache /lib.index.cache \
    && mkdir -p $WLP_OUTPUT_DIR/defaultServer \
    && ln -s $WLP_OUTPUT_DIR/defaultServer /output \
    && ln -s /opt/ol/wlp/usr/servers/defaultServer /config \
    && mkdir -p /config/configDropins/defaults \
    && mkdir -p /config/configDropins/overrides \
    && ln -s /opt/ol/wlp /liberty \
    && ln -s /opt/ol/fixes /fixes \
    && chown -R 1001:0 /config \
    && chmod -R g+rw /config \
    && chown -R 1001:0 /logs \
    && chmod -R g+rw /logs \
    && chown -R 1001:0 /opt/ol/wlp/usr \
    && chmod -R g+rw /opt/ol/wlp/usr \
    && chown -R 1001:0 /opt/ol/wlp/output \
    && chmod -R g+rw /opt/ol/wlp/output \
    && chown -R 1001:0 /opt/ol/helpers \
    && chmod -R g+rw /opt/ol/helpers \
    && chown -R 1001:0 /opt/ol/fixes \
    && chmod -R g+rwx /opt/ol/fixes \
    && mkdir /etc/wlp \
    && chown -R 1001:0 /etc/wlp \
    && chmod -R g+rw /etc/wlp \
    && echo "<server description=\"Default Server\"><httpEndpoint id=\"defaultHttpEndpoint\" host=\"*\" /></server>" > /config/configDropins/defaults/open-default-port.xml

# Create a new SCC layer
RUN if [ "$OPENJ9_SCC" = "true" ]; then populate_scc.sh; fi \
    && rm -rf /output/messaging /output/resources/security /logs/* $WLP_OUTPUT_DIR/.classCache /output/workarea \
    && chown -R 1001:0 /opt/ol/wlp/output \
    && chmod -R g+rwx /opt/ol/wlp/output

#These settings are needed so that we can run as a different user than 1001 after server warmup
ENV RANDFILE=/tmp/.rnd \
    OPENJ9_JAVA_OPTIONS="-XX:+IgnoreUnrecognizedVMOptions -XX:+IdleTuningGcOnIdle -Xshareclasses:name=openj9_system_scc,cacheDir=/opt/java/.scc,readonly,nonFatal -Dosgi.checkConfiguration=false"

USER 1001

EXPOSE 9080 9443

ENTRYPOINT ["/opt/ol/helpers/runtime/docker-server.sh"]
CMD ["/opt/ol/wlp/bin/server", "run", "defaultServer"]


FROM playwright as runner

COPY --chown=1001:0  target/wlp-usr/shared/resources/h2 /opt/ol/wlp/usr/shared/resources/h2

# Add Liberty server configuration including all necessary features
COPY --chown=1001:0  target/wlp-usr/servers/defaultServer/server.xml /config/
COPY --chown=1001:0  target/wlp-usr/servers/defaultServer/jvm.options /config/

RUN features.sh

# Add app
COPY --chown=1001:0  target/ol-custom-containerfile*.war /config/dropins/

RUN configure.sh \
    && chmod ugo+rwx /config /config/configDropins /config/configDropins/defaults \
    && chmod ugo+rw /config/configDropins/defaults/keystore.xml
